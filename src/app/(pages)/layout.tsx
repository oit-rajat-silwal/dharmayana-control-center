'use client'
import BreadCrumb from "@/componenets/BreadCrumb";
import NavBar from "@/componenets/NavBar";
import SideBar from "@/componenets/SideBar";
import { AppProvider } from "@/contexts/AppContext";
import { usePathname, useRouter } from "next/navigation";
import { useEffect } from "react";
import { deleteCookie } from "../utils/auth";

// export const metadata: Metadata = {
//     title: "Create Next App",
//     description: "Generated by create next app",
// };

export default function GroupLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const pathname = usePathname();
    const router = useRouter();


    useEffect(() => {
        const tokenExpiry = localStorage.getItem('token_expiry');

        if (tokenExpiry) {
            const expiryTime = parseInt(tokenExpiry, 10);
            const currentTime = Date.now();

            if (currentTime >= expiryTime) {
                // Token has expired, log the user out

                // Delete tokens from cookies
                deleteCookie('access_token');
                deleteCookie('refresh_token');

                // Remove the expiry from localStorage
                localStorage.removeItem('token_expiry');
                localStorage.removeItem('zoho_oauth_state');

                // Redirect to the login page
                router.push('/');
            }
        } else {
            // No token expiry found, redirect to login
            router.push('/');
        }
    }, [router]);
    return (

        <AppProvider>
            <div className={`flex`}>
                <SideBar />
                <div className={`flex flex-col w-full h-screen overflow-scroll z-0`}>
                    <NavBar />
                    <div className={` flex flex-col dashboard-section py-[1.5rem] px-[2rem] gap-[40px] font-sans`} onClick={() => {
                        const logout_container = document.querySelector('.logout-container');
                        if (logout_container && !logout_container.classList.contains('hidden')) {
                            console.log("hello");
                            logout_container.classList.toggle('hidden');

                        }

                    }
                    }>
                        <BreadCrumb pathname={pathname} />
                        {children}
                    </div>
                </div>

            </div>
        </AppProvider>

    );
}
